{
    // change this to your desired path!
    "python.defaultInterpreterPath": "./.dbt-env/bin/python",
    "files.associations": {
        // the pattern on the left side can be whatever you want: e.g.
        "**/jaffle_shop/**/*.sql": "jinja-sql", // just the .sqlfiles inside of jaffle_shop, or
        "*.sql": "jinja-sql", // all .sql files
    
        // optional: don't format models in `target/` dir
        "**/target/**": "",
        // I don't personally use these, but you can also have jinja work for `yaml` and `md` files
        "**/<dbt-project-dir>/**/*.yaml": "jinja-yaml",
         "**/<dbt-project-dir>/**/*.yml": "jinja-yaml",
        "**/<dbt-project-dir>/**/docs/**/*.md": "jinja-md",
    
        // the vscode-dbt docs say you may need this
        "editor.quickSuggestions": {
        "strings": true
        }
    },
    // this is so you can easily jump to your compiled SQL files
    "findrelated.workspaceRulesets": [
                {
                    "name": "sql",
                    "rules": [
                        {
                            "pattern": "^(.*/)?models/(.*/)?(.+\\.sql)$",
                            "locators": [
                                "**/compiled/**/$3"
                            ]
                        },
                        {
                            "pattern": "^(.*/)?compiled/(.*/)?(.+\\.sql)$",
                            "locators": [
                                "**/run/**/$3"
                            ]
                        },
                        {
                            "pattern": "^(.*/)?run/(.*/)?(.+\\.sql)$",
                            "locators": [
                                "**/models/**/$3"
                            ]
                        }
                    ]
                }
            ],
    "findrelated.applyRulesets": [
                "sql"
    ],
    // easier to see if there are unsaved changed
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.labelFormat": "medium",
            
    // make a vertical line so I don't make lines too long
    "editor.rulers": [80],
    // show whitespace as dots
    // (easier to count out indentation and spot trailing whitesapce)
    "editor.renderWhitespace": "all",
}

